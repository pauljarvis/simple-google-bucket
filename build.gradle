plugins {
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.2'
    id 'com.github.ben-manes.versions' version '0.17.0'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'jacoco'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://maven-central.storage.googleapis.com' }
}

dependencies {
    compile 'com.google.api-client:google-api-client:1.23.0'
    compile 'com.google.apis:google-api-services-storage:v1-rev116-1.23.0'
    compile 'org.apache.commons:commons-lang3:3.7'
    compile 'commons-io:commons-io:2.6'
    compile 'org.slf4j:slf4j-api:1.7.25'

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.8.0'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'org.slf4j:slf4j-log4j12:1.7.25'
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    if (project.hasProperty('google.json.credentials')) {
        environment 'GOOGLE_JSON_APPLICATION_CREDENTIALS', project.property('google.json.credentials')
    }
    if (project.hasProperty('google.application.name')) {
        environment 'GOOGLE_APPLICATION_NAME', project.property('google.application.name')
    }
    if (project.hasProperty('google.bucket.name')) {
        environment 'GOOGLE_BUCKET_NAME', project.property('google.bucket.name')
    }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

signing {
    sign configurations.archives
}
signArchives.enabled = gradle.startParameter.taskNames.contains("uploadArchives")

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                packaging 'jar'
                name 'Simple Google Bucket'
                description 'Library containing useful classes for interacting and testing with Google buckets'
                groupId 'com.github.michaelruocco'
                artifactId 'simple-google-bucket'
                version '1.0.1'
                url 'https://github.com/michaelruocco/simple-google-bucket'

                developers {
                    developer {
                        id 'mruoc'
                        name 'Michael Ruocco'
                        email 'michael.ruocco@hotmail.com'
                    }
                }

                scm {
                    connection 'scm:git:git@github.com/michaelruocco/simple-google-bucket.git'
                    developerConnection 'scm:git:git@github.com/michaelruocco/simple-google-bucket.git'
                    url 'git@github.com/michaelruocco/simple-google-bucket.git'
                }

                licenses {
                    license {
                        name 'BSD License'
                        url 'http://www.opensource.org/licenses/bsd-license.php'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}
